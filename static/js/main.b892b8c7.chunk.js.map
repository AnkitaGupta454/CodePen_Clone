{"version":3,"sources":["components/Editor/Editor.js","Hooks/useLocalStorage.js","components/App/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setcss","js","setjs","srcDOC","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","width","height","frameBorder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAoDeA,MAzCf,SAAgBC,GACZ,IACIC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SAGF,EAAsBC,oBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAKF,OACI,sBAAKC,UAAS,2BAAsBF,EAAO,GAAG,aAA9C,UACG,sBAAKE,UAAU,eAAf,UACKN,EACD,wBACAO,KAAK,SACND,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,MAHnC,SAKE,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGpD,cAAC,aAAD,CACGC,eAjBV,SAAsBC,EAASC,EAAMd,GACnCC,EAASD,IAiBDA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACNC,cAAe,EACfC,MAAO,EACPC,KAAOpB,EACPqB,MAAQ,WACRC,aAAc,SCzChB,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAE7B,EAA0BpB,oBAAS,WACjC,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAPX,mBAAOvB,EAAP,KAAc8B,EAAd,KAeA,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAChD,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,GCuCFI,MAxDf,WACI,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACF,EAAsBf,EAAgB,MAAO,IAA7C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAM,IAA1C,mBAAOkB,EAAP,KAAWC,EAAX,KACE,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeC,EAAf,KAgBA,OAdFX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGT,qCACA,sBAAKlC,UAAU,gBAAf,UACI,cAAC,EAAD,CACIP,SAAS,MACTC,YAAY,OACZC,MAAOmC,EACPlC,SAAUmC,IAEd,cAAC,EAAD,CACGtC,SAAS,MACTC,YAAY,MACZC,MAAOqC,EACPpC,SAAUqC,IAEb,cAAC,EAAD,CACGxC,SAAS,KACTC,YAAY,KACZC,MAAOuC,EACPtC,SAAUuC,OAGjB,qBAAKnC,UAAU,OAAf,SACI,wBACAoC,OAAQA,EACRK,MAAM,cACNC,QAAQ,gBACRC,MAAM,OACNC,OAAO,OACPC,YAAY,YCjDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b892b8c7.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction Editor(props) {\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n      } = props\r\n  \r\n      const [open,setOpen] =useState(true);\r\n    function handleChange(editor , data, value){\r\n      onChange(value)\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '':'collapsed'}`}>\r\n           <div className=\"editor-title\">\r\n               {displayName}\r\n               <button\r\n               type=\"button\"\r\n              className=\"expand-collapse-btn\"\r\n              onClick={() => setOpen(prevOpen => !prevOpen)}\r\n              >\r\n                 <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n               </button>\r\n           </div>\r\n           <ControlledEditor\r\n              onBeforeChange={handleChange}\r\n              value={value}\r\n              className=\"code-mirror-wrapper\"\r\n              options={{\r\n                 lineWrapping : true,\r\n                 lint : true,\r\n                 mode : language,\r\n                 theme : 'material',\r\n                 lineNumbers : true\r\n              }}\r\n           />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React,{useState,useEffect} from 'react'\r\nimport Editor from '../Editor/Editor'\r\nimport useLocalStorage from '../../Hooks/useLocalStorage'\r\n\r\n\r\nfunction App() {\r\n    const [html, setHtml] = useLocalStorage('html', '')\r\n  const [css, setcss] = useLocalStorage('css', '')\r\n  const [js, setjs] = useLocalStorage('js', '')\r\n    const [srcDOC, setSrcDoc] = useState('')\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `)\r\n    }, 250)\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [html, css, js])\r\n   \r\n    return (\r\n        <>\r\n        <div className=\"pane top-pane\">\r\n            <Editor\r\n                language=\"xml\"\r\n                displayName=\"HTML\"\r\n                value={html}\r\n                onChange={setHtml}\r\n            />\r\n            <Editor\r\n               language=\"css\"\r\n               displayName=\"CSS\"\r\n               value={css}\r\n               onChange={setcss}\r\n            />\r\n            <Editor\r\n               language=\"js\"\r\n               displayName=\"JS\"\r\n               value={js}\r\n               onChange={setjs}\r\n            />\r\n        </div>\r\n        <div className=\"pane\">\r\n            <iframe\r\n            srcDOC={srcDOC}\r\n            title=\"Code_Output\"\r\n            sandbox=\"allow-scripts\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            frameBorder=\"0\"\r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}